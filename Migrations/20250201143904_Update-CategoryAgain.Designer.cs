// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Data;

#nullable disable

namespace ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250201143904_Update-CategoryAgain")]
    partial class UpdateCategoryAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly?>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "CAT-1012",
                            Name = "Hot Coffe"
                        },
                        new
                        {
                            CategoryID = "CAT-1013",
                            Name = "Iced Coffe"
                        });
                });

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.ProductImages", b =>
                {
                    b.Property<string>("ImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Products", b =>
                {
                    b.Property<string>("ProductID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly?>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("Category_ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = "PROD-202",
                            Category_ID = "CAT-1013",
                            CreatedAt = new DateOnly(2023, 12, 10),
                            Description = "Test",
                            Name = "Product101",
                            Price = 50.0,
                            Size = "30oz",
                            Stock = 2
                        });
                });

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.ProductImages", b =>
                {
                    b.HasOne("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Products", "Products")
                        .WithMany("ListOfProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Products", b =>
                {
                    b.HasOne("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ONLINE_BUSINESS_PROJECT_FOR_PL101_SUBJECT.Models.Products", b =>
                {
                    b.Navigation("ListOfProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
